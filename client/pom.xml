<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>all</artifactId>
        <groupId>com.jdt.fedlearn</groupId>
        <version>0.9.2</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>client</artifactId>
    <name>fedlearn-client</name>

    <properties>
        <jdk.version>1.8</jdk.version>                  <!-- JDK version -->
        <aspectj.version>1.8.9</aspectj.version>
        <httpclient.version>4.5.11</httpclient.version>
        <protobuf-java.version>3.11.0</protobuf-java.version>
        <gson.version>2.8.6</gson.version>              <!-- gson 版本号，是否日后使用统一json处理包？ -->
        <testng.version>6.14.3</testng.version>
        <fabric-sdk-java>1.4.1</fabric-sdk-java>
        <jdchain.sdk>1.4.2.RELEASE</jdchain.sdk>  <!--区块链底层jd chain协议版本号-->
        <hadoop.version>3.3.1</hadoop.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.jdt.fedlearn</groupId>
            <artifactId>common</artifactId>
        </dependency>

        <!-- jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- jdchain 相关依赖 start-->
        <dependency>
            <groupId>com.jd.blockchain</groupId>
            <artifactId>sdk-client</artifactId>
            <version>${jdchain.sdk}</version>
            <exclusions>
                <exclusion>
                    <artifactId>log4j-slf4j-impl</artifactId>
                    <groupId>org.apache.logging.log4j</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>spring-boot-starter-log4j2</artifactId>
                    <groupId>org.springframework.boot</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>commons-io</artifactId>
                    <groupId>commons-io</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.jd.blockchain</groupId>
            <artifactId>crypto-classic</artifactId>
            <version>${jdchain.sdk}</version>
            <exclusions>
                <exclusion>
                    <artifactId>spring-boot-starter-log4j2</artifactId>
                    <groupId>org.springframework.boot</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>spring-boot-starter-log4j2</artifactId>
                    <groupId>org.springframework.boot</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.jd.blockchain</groupId>
            <artifactId>crypto-sm</artifactId>
            <version>${jdchain.sdk}</version>
        </dependency>
    </dependencies>


    <build>
        <finalName>${project.name}</finalName>
        <resources>
            <resource>
                <directory>client/src/main/resources</directory>
                <excludes>
                    <exclude>dev/*</exclude>
                    <exclude>local/*</exclude>
                    <exclude>product/*</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.21.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <!-- here the phase you need -->
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/extra-resources</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/test/resources</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <!-- 指定入口函数 -->
                            <mainClass>com.jdt.fedlearn.client.HttpApp</mainClass>
                            <!-- 是否添加依赖的jar路径配置 -->
                            <addClasspath>true</addClasspath>
                            <!-- 依赖的jar包存放位置，和生成的jar放在同一级目录下 -->
                            <classpathPrefix>lib/</classpathPrefix>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

        </plugins>
    </build>
    <profiles>
        <profile>
            <id>cloud</id>
            <properties>
                <env>cloud</env>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>

        <profile>
            <id>test</id>
            <properties>
                <env>test</env>
            </properties>
        </profile>

        <profile>
            <id>dev</id>
            <properties>
                <env>dev</env>
            </properties>
        </profile>

        <profile>
            <id>product</id>
            <properties>
                <env>product</env>
            </properties>
        </profile>
    </profiles>

</project>
